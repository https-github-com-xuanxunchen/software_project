syntax = "proto3";

package helloworld;

//import ".. google/protobuf/wrappers.proto";

/*message StringValue {
  string value = 1;
}

StringValue Username;*/

//string username = 1;

//google.protobuf.StringValue Username;

message Username {
  string username = 1;
}

message Password {
  string password = 1;
}

message Token {
  string token = 1;
}

message UserInfo {    //用户信息
  //string id = 1;    
  string username = 2;
  string password = 3;
}

message UserInfoSetOperation {    //表示设置用户信息的一次动作，每次动作只能设置/清空用户的某条信息
  enum operation {    //设置用户信息的操作有设置（更改），清空
    set = 0;
    clear = 1;
  };

  enum field {    //可以更改用户的哪些信息
    nickname = 0;
    description = 1;
  };
}

message LoginArgs {
  Username username = 1;
  Password password = 2;
}

message SignupArgs {
  Username username = 1;
  Password password = 2;
}

message SetUserInfoArgs {
  Token token = 1;
  repeated UserInfoSetOperation userInfoSetOperations = 2;
}

message GetOthersInfoArgs {
  Token token = 1;
  string id = 2;
}

message Empty {

}

message Err {
  uint32 code = 1;
  string msg = 2;
}

message LoginResult {


  Token token = 2;
  Err err = 3;
}

message SignupResult {


  Token token = 2;
  Err err = 3;
}

message GetUserInfoResult {


  UserInfo userInfo = 2;
  Err err = 3;
}

message SetUserInfoResult {


  Empty empty = 2;    //想不出来这个数据段可以填什么，直接在server.go的UserInfos里面改应该就可以了
  Err err = 3;
}

message GetOthersInfoResult {
  enum dataOrErr {
    isData = 0;
    isErr = 1;
  }

  UserInfo userInfo = 2;
  Err err = 3;
}

service Greeter {
  // Sends a greeting
  rpc Login(LoginArgs) returns (LoginResult) {}    //Token
  rpc Signup(SignupArgs) returns(SignupResult) {}    //Token
  rpc GetUserInfo(Token) returns(GetUserInfoResult) {}    //UserInfo
  rpc SetUserInfo(SetUserInfoArgs) returns(SetUserInfoResult) {}    //Empty
  rpc GetOthersInfo(GetOthersInfoArgs) returns(GetOthersInfoResult) {}    //UserInfo

}

